<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Kassa.Wpf.Controls"
    xmlns:mx="clr-namespace:Kassa.Wpf.MarkupExntesions"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource Montseratt}" />
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="FontFamily" Value="{DynamicResource Montseratt}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryForeground}" />
    </Style>

    <Style TargetType="Button">
        <Setter Property="FontFamily" Value="{DynamicResource Montseratt}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MinWidth="{TemplateBinding MinWidth}"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentBrush2}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style
        x:Key="PrimaryTextBlock"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryForeground}" />
    </Style>

    <Style
        x:Key="IconButton"
        BasedOn="{StaticResource {x:Type Button}}"
        TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ClickableBg}" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style TargetType="Path">
        <Setter Property="Stretch" Value="Uniform" />
    </Style>

    <Style
        x:Key="Header"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="28" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="LineHeight" Value="39" />

        <Style.Triggers>
            <DataTrigger Binding="{mx:AdaptiveMarkup Breakpoint=Medium}" Value="True">
                <Setter Property="FontSize" Value="20" />
                <Setter Property="LineHeight" Value="27" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="Large"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="16" />

        <Style.Triggers>
            <DataTrigger Binding="{mx:AdaptiveMarkup Breakpoint=Medium}" Value="True">
                <Setter Property="FontSize" Value="11" />
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style
        x:Key="ExtraLarge"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="24" />

        <Style.Triggers>
            <DataTrigger Binding="{mx:AdaptiveMarkup Breakpoint=Medium}" Value="True">
                <Setter Property="FontSize" Value="17" />
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style
        x:Key="SubHeader"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="14.4" />
        <Setter Property="Foreground" Value="{DynamicResource SurfaceBrush}" />

        <Style.Triggers>
            <DataTrigger Binding="{mx:AdaptiveMarkup Breakpoint=Medium}" Value="True">
                <Setter Property="FontSize" Value="11" />
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style
        x:Key="Header2"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="LineHeight" Value="28" />

        <Style.Triggers>
            <DataTrigger Binding="{mx:AdaptiveMarkup Breakpoint=Medium}" Value="True">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="LineHeight" Value="19" />
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style
        x:Key="SmallTextBlock"
        BasedOn="{StaticResource PrimaryTextBlock}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="11" />

        <Style.Triggers>
            <DataTrigger Binding="{mx:AdaptiveMarkup Breakpoint=Medium}" Value="True">
                <Setter Property="FontSize" Value="7.4" />
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="PrimaryButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource DefaultButtonBackground}" />
        <Setter Property="MinWidth" Value="{mx:AdaptiveSize 200}" />
        <Setter Property="Padding" Value="{mx:AdaptiveSize Thickness='16'}" />
        <Setter Property="FontSize" Value="{mx:AdaptiveSize 20}" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultButtonForeground}" />
        <Setter Property="MinHeight" Value="{mx:AdaptiveSize 56}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="Button">
                    <Border
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MinWidth="{TemplateBinding MinWidth}"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{mx:AdaptiveSize CornerRadius='38'}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{mx:AdaptiveMarkup Breakpoint=Medium}" Value="True">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Padding" Value="11" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type local:ButtonWithIcon}">

        <Setter Property="FontSize" Value="{mx:AdaptiveSize 14}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Background" Value="{StaticResource ClickableBg}" />
        <Setter Property="CornerRadius" Value="6.4" />
        <Setter Property="FontFamily" Value="./Assets/Fonts/Montseratt/#Montserrat" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ButtonWithIcon}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Border
                            x:Name="_topShadow"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{DynamicResource TopShadowBrush}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            <Border.Effect>
                                <BlurEffect Radius="3.2" />
                            </Border.Effect>
                        </Border>
                        <Border
                            x:Name="_bottomShadow"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{DynamicResource BottomShadowBrush}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            <Border.Effect>
                                <BlurEffect Radius="2.7" />
                            </Border.Effect>
                        </Border>
                        <Border
                            x:Name="_border"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ClipToBounds="True"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="28" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Path
                                    Data="{TemplateBinding Icon}"
                                    Fill="{TemplateBinding Foreground}"
                                    Stretch="Uniform" />
                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="10.4,0,0,0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    TextBlock.FontSize="{TemplateBinding FontSize}"
                                    TextBlock.Foreground="{TemplateBinding Foreground}" />

                            </Grid>
                        </Border>
                    </Grid>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="_topShadow" Property="BorderThickness" Value="2,2,0,0" />
                            <Setter TargetName="_bottomShadow" Property="BorderThickness" Value="0,0,2,2" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ClickableBg}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="CheckBoxWithShadow" TargetType="CheckBox">
        <Grid>
            <Border
                x:Name="_topShadow"
                BorderThickness="2,2,0,0"
                CornerRadius="6.4">
                <Border.Effect>
                    <BlurEffect Radius="{DynamicResource TopShadowBlurEffectRadius}" />
                </Border.Effect>
            </Border>
            <Border
                x:Name="_bottomShadow"
                BorderThickness="0,0,2,2"
                CornerRadius="6.4">
                <Border.Effect>
                    <BlurEffect Radius="{DynamicResource BottomShadowBlurEffectRadius}" />
                </Border.Effect>
            </Border>
            <Border
                x:Name="_border"
                Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="6.4">
                <ContentPresenter
                    Grid.Column="1"
                    Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    TextBlock.FontSize="{TemplateBinding FontSize}"
                    TextBlock.Foreground="{TemplateBinding Foreground}" />
            </Border>
        </Grid>


        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="_topShadow" Property="BorderBrush" Value="{DynamicResource TopShadowBrush}" />
                <Setter TargetName="_bottomShadow" Property="BorderBrush" Value="{DynamicResource BottomShadowBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter TargetName="_topShadow" Property="BorderBrush" Value="{DynamicResource BottomShadowBrush}" />
                <Setter TargetName="_bottomShadow" Property="BorderBrush" Value="{DynamicResource TopShadowBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style x:Key="PrimaryCheckbox" TargetType="CheckBox">
        <Setter Property="FontSize" Value="{mx:AdaptiveSize 14}" />
        <Setter Property="Padding" Value="{mx:AdaptiveSize Thickness=10}" />
        <Setter Property="Background" Value="{DynamicResource ClickableBg}" />
        <Setter Property="BorderThickness" Value="{DynamicResource BackToMenuBorderThickness}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BackToMenuBorderBrush}" />
        <Setter Property="Template" Value="{StaticResource CheckBoxWithShadow}" />
    </Style>

    <Style
        x:Key="BackToMain"
        BasedOn="{StaticResource PrimaryCheckbox}"
        TargetType="CheckBox">


        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="ContentTemplate" Value="{DynamicResource PressedMainMenuIcon}" />
                <Setter Property="Background" Value="{DynamicResource PressedBackToMenuBackground}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="ContentTemplate" Value="{DynamicResource MainMenuIcon}" />
                <Setter Property="Background" Value="{DynamicResource ClickableBg}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="local:ButtonWithCornerRaduis">

        <Setter Property="TextBlock.FontSize" Value="28" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultButtonForeground}" />
        <Setter Property="Background" Value="{DynamicResource DefaultButtonBackground}" />
        <Setter Property="CornerRadius" Value="{mx:AdaptiveSize CornerRadius=40}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="1.3" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ButtonWithCornerRaduis">
                    <Border
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}" />
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="Card"
        BasedOn="{StaticResource {x:Type local:ButtonWithCornerRaduis}}"
        TargetType="local:ButtonWithCornerRaduis">
        <Setter Property="Width" Value="235" />
        <Setter Property="Background" Value="{DynamicResource DefaultCardBackground}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="CornerRadius" Value="{mx:AdaptiveSize CornerRadius=11}" />

    </Style>

    <system:Double x:Key="FooterSize">75</system:Double>
    <GridLength x:Key="FooterSizeAsGridLength">75</GridLength>
    <Thickness
        x:Key="FooterSizeAsThickness"
        Bottom="80"
        Left="5"
        Right="5"
        Top="5" />

    <Style
        x:Key="KeyButtonStyle"
        BasedOn="{StaticResource {x:Type Button}}"
        TargetType="Button">
        <Setter Property="TextBlock.FontSize" Value="{mx:AdaptiveSize 28}" />
        <Setter Property="Foreground" Value="{DynamicResource KeyForeground}" />
        <Setter Property="Background" Value="{DynamicResource KeyBackground}" />
        <Setter Property="Padding" Value="{mx:AdaptiveSize Thickness=10}" />
        <Setter Property="Margin" Value="{mx:AdaptiveSize Thickness=1.3}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Margin="{TemplateBinding Margin}"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{mx:AdaptiveSize CornerRadius=11}">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Path
                                x:Name="Backspace"
                                Data="{StaticResource BackspaceIcon}"
                                Fill="{DynamicResource KeyForeground}" />
                            <Path
                                x:Name="Clear"
                                Margin="0,0,15,0"
                                Data="{StaticResource Clear}"
                                Fill="{DynamicResource KeyForeground}" />

                            <ContentPresenter
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}" />
                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsBackspace}" Value="True">
                            <Setter TargetName="Backspace" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsBackspace}" Value="False">
                            <Setter TargetName="Backspace" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsClear}" Value="True">
                            <Setter TargetName="Clear" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsClear}" Value="False">
                            <Setter TargetName="Clear" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>