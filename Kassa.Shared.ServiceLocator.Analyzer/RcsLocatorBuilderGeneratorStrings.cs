using System;
using System.Collections.Generic;
using System.Text;

namespace Kassa.Shared.ServiceLocator.Analyzer;
public static class RcsLocatorBuilderGeneratorStrings
{
    public const string RcsLocatorBuilderClassName = "RcsLocatorBuilder";
    public const string RcsLocatorBuilderNamespace = "Kassa.Shared.Locator";
    public const string RcsLocatorBuilderFullName = $"{RcsLocatorBuilderNamespace}.{RcsLocatorBuilderClassName}";
    public const string AddTransientMethodName = "AddTransient";
    public const string AddScopedMethodName = "AddScoped";
    public const string AddSingletonMethodName = "AddSingleton";

    public const string RcsLocatorBuilderClassDecloration = @$"
// <auto-generated/>

namespace {RcsLocatorBuilderNamespace}
{{
    internal static partial class {RcsLocatorBuilderClassName}
    {{
        public static void AddTransient<TService, TImplementation>() where TService : class where TImplementation : TService
        {{
            // This method is needed by the source generator
            // The body of this method is empty because this method is only a marker
        }}

        public static void AddScoped<TService, TImplementation>() where TService : class, IInitializable where TImplementation : TService
        {{
            // This method is needed by the source generator
            // The body of this method is empty because this method is only a marker
        }}

        public static void AddSingleton<TService, TImplementation>() where TService : class where TImplementation : TService
        {{
            // This method is needed by the source generator
            // The body of this method is empty because this method is only a marker
        }}

        public static void AddTransient<TService>()
        {{
            // This method is needed by the source generator
            // The body of this method is empty because this method is only a marker
        }}

        public static void AddScoped<TService>() where TService : class, IInitializable
        {{
            // This method is needed by the source generator
            // The body of this method is empty because this method is only a 
        }}

        public static void AddSingleton<TService>()
        {{
            // This method is needed by the source generator
            // The body of this method is empty because this method is only a marker
        }}

        public static void AddSingleton<TService>(Func<TService> serviceCreator)
        {{
            // This method is needed by the source generator
            // The body of this method is empty because this method is only a marker
        }}

        public static void AddSingleton<TService, TImplementation>(Func<TImplementation> serviceCreator)
        {{
            // This method is needed by the source generator
            // The body of this method is empty because this method is only a marker
        }}
    }}
}}
";

    public const string InjectConstructorAttributeShortName = "InjectConstructor";
    public const string InjectConstructorAttributeName = $"{InjectConstructorAttributeShortName}Attribute";
    public const string InjectConstructorAttributeFullName = $"{RcsLocatorBuilderNamespace}.{InjectConstructorAttributeName}";

    public const string InjectConstructorAttributeDecloration = @$"
// <auto-generated/>

namespace {RcsLocatorBuilderNamespace}
{{
    [AttributeUsage(AttributeTargets.Constructor, AllowMultiple = false, Inherited = false)]
    internal sealed class {InjectConstructorAttributeName} : Attribute
    {{
    }}
}}
";
}